# =============================================
# 缅甸快递系统 Docker Compose 配置
# Myanmar Express Delivery System
# =============================================

version: '3.8'

# 网络配置
networks:
  myanmar-express-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# 数据卷配置
volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local
  nginx-logs:
    driver: local
  ssl-certs:
    driver: local
  app-uploads:
    driver: local

services:
  # =============================================
  # MySQL 数据库服务
  # =============================================
  mysql:
    image: mysql:8.0
    container_name: myanmar-express-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Yangon
    volumes:
      - mysql-data:/var/lib/mysql
      - ./database/myanmar_express_database.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./database/sample_data.sql:/docker-entrypoint-initdb.d/02-sample.sql:ro
      - ./mysql/my.cnf:/etc/mysql/conf.d/custom.cnf:ro
    ports:
      - "3306:3306"
    networks:
      myanmar-express-network:
        ipv4_address: 172.20.0.10
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-time-zone='+06:30'
      --max-connections=1000
      --innodb-buffer-pool-size=1G
      --innodb-log-file-size=256M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # =============================================
  # Redis 缓存服务
  # =============================================
  redis:
    image: redis:7-alpine
    container_name: myanmar-express-redis
    restart: unless-stopped
    environment:
      TZ: Asia/Yangon
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/etc/redis/redis.conf:ro
    ports:
      - "6379:6379"
    networks:
      myanmar-express-network:
        ipv4_address: 172.20.0.11
    command: redis-server /etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5

  # =============================================
  # 前端应用服务
  # =============================================
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        NODE_ENV: production
        REACT_APP_API_URL: ${REACT_APP_API_URL}
        REACT_APP_SUPABASE_URL: ${REACT_APP_SUPABASE_URL}
        REACT_APP_SUPABASE_ANON_KEY: ${REACT_APP_SUPABASE_ANON_KEY}
        REACT_APP_VERSION: ${REACT_APP_VERSION:-2.1.0}
        REACT_APP_BUILD_TIME: ${REACT_APP_BUILD_TIME}
        REACT_APP_MYANMAR_TIMEZONE: Asia/Yangon
    container_name: myanmar-express-frontend
    restart: unless-stopped
    environment:
      TZ: Asia/Yangon
      NGINX_HOST: ${DOMAIN_NAME:-localhost}
      NGINX_PORT: 80
    volumes:
      - nginx-logs:/var/log/nginx
      - ssl-certs:/etc/nginx/ssl:ro
      - app-uploads:/usr/share/nginx/html/uploads
      - ./nginx/templates:/etc/nginx/templates:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      myanmar-express-network:
        ipv4_address: 172.20.0.20
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      timeout: 5s
      retries: 3
      start_period: 10s

  # =============================================
  # 开发环境服务（可选）
  # =============================================
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: myanmar-express-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      TZ: Asia/Yangon
      CHOKIDAR_USEPOLLING: true
      REACT_APP_API_URL: ${REACT_APP_API_URL}
      REACT_APP_SUPABASE_URL: ${REACT_APP_SUPABASE_URL}
      REACT_APP_SUPABASE_ANON_KEY: ${REACT_APP_SUPABASE_ANON_KEY}
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      myanmar-express-network:
        ipv4_address: 172.20.0.21
    profiles:
      - dev
    command: npm start

  # =============================================
  # 监控服务 - Prometheus
  # =============================================
  prometheus:
    image: prom/prometheus:latest
    container_name: myanmar-express-prometheus
    restart: unless-stopped
    environment:
      TZ: Asia/Yangon
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      myanmar-express-network:
        ipv4_address: 172.20.0.30
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    profiles:
      - monitoring

  # =============================================
  # 监控服务 - Grafana
  # =============================================
  grafana:
    image: grafana/grafana:latest
    container_name: myanmar-express-grafana
    restart: unless-stopped
    environment:
      TZ: Asia/Yangon
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: false
      GF_SERVER_DOMAIN: ${DOMAIN_NAME:-localhost}
      GF_SMTP_ENABLED: true
      GF_SMTP_HOST: ${SMTP_HOST}
      GF_SMTP_USER: ${SMTP_USER}
      GF_SMTP_PASSWORD: ${SMTP_PASSWORD}
    volumes:
      - ./monitoring/grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3001:3000"
    networks:
      myanmar-express-network:
        ipv4_address: 172.20.0.31
    depends_on:
      - prometheus
    profiles:
      - monitoring

  # =============================================
  # 日志收集服务 - Filebeat
  # =============================================
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.5.0
    container_name: myanmar-express-filebeat
    restart: unless-stopped
    environment:
      TZ: Asia/Yangon
    volumes:
      - ./monitoring/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - nginx-logs:/var/log/nginx:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      myanmar-express-network:
        ipv4_address: 172.20.0.32
    user: root
    profiles:
      - monitoring

  # =============================================
  # 备份服务
  # =============================================
  backup:
    image: alpine:latest
    container_name: myanmar-express-backup
    restart: "no"
    environment:
      TZ: Asia/Yangon
      MYSQL_HOST: mysql
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      BACKUP_RETENTION_DAYS: 30
    volumes:
      - ./backups:/backups
      - ./scripts/backup.sh:/backup.sh:ro
    networks:
      myanmar-express-network:
        ipv4_address: 172.20.0.40
    depends_on:
      - mysql
    command: sh /backup.sh
    profiles:
      - backup

  # =============================================
  # SSL 证书管理服务
  # =============================================
  certbot:
    image: certbot/certbot:latest
    container_name: myanmar-express-certbot
    restart: "no"
    environment:
      TZ: Asia/Yangon
    volumes:
      - ssl-certs:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      myanmar-express-network:
        ipv4_address: 172.20.0.50
    profiles:
      - ssl

  # =============================================
  # 数据库管理工具 - phpMyAdmin
  # =============================================
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: myanmar-express-phpmyadmin
    restart: unless-stopped
    environment:
      TZ: Asia/Yangon
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      UPLOAD_LIMIT: 100M
    ports:
      - "8080:80"
    networks:
      myanmar-express-network:
        ipv4_address: 172.20.0.60
    depends_on:
      mysql:
        condition: service_healthy
    profiles:
      - admin

  # =============================================
  # Redis 管理工具 - Redis Commander
  # =============================================
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: myanmar-express-redis-commander
    restart: unless-stopped
    environment:
      TZ: Asia/Yangon
      REDIS_HOSTS: redis:redis:6379
    ports:
      - "8081:8081"
    networks:
      myanmar-express-network:
        ipv4_address: 172.20.0.61
    depends_on:
      redis:
        condition: service_healthy
    profiles:
      - admin
